openapi: 3.0.0
info:
  title: Stwitter
  description:
    A social network for creating post and making comments.
  version: 0.0.1
servers:
  - url: 'http//localhost:8889'
    description: Local dev server
paths:
  /posts:
    post:
      summary: Creates a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostViewModelReq'
      responses:
        '201':
          description: A Post object is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostViewModelRes'
        '400':
          description: Invalid request sytax
        '422':
          description: Incomplete information. Some required fields missing.
    get:
      summary: Returns all Post objects in the db and appends its list of comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostViewModelRes'
  /posts/{id}:
    get:
      summary: Retrieves the enrty for the Post with the given id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the post you want
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Post object matching the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostViewModelRes'
    delete:
      summary: Deletes the entry for the Post with the Given id
      parameters:
        - name: id
          in: path
          required: true
          description: id of the Post you want to delete
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Post successfully deleted
  /posts/user/{poster_name}:
    get:
      summary: Retrieves sll enrties for the Post with the given name
      parameters:
        - name: poster_name
          in: path
          required: true
          description: name of the poster you want
          schema:
            type: string
      responses:
        '200':
          description: POst List matching the name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostViewModelRes'
  /comments:
    post:
      summary: Creates a new comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostViewModelReq'
      responses:
        '201':
          description: A Comment object is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentViewModelReq'
        '400':
          description: Invalid request sytax
        '422':
          description: Incomplete information. Some required fields missing.
  /comments/postId/{post_id}:
    get:
      summary: Retrieves sll comments for the Post with the given id
      parameters:
        - name: post_id
          in: path
          required: true
          description: list of comments
          schema:
            type: string
      responses:
        '200':
          description: Comments List matching the post id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentViewModelRes'

# ===== Models =========================
components:
  schemas:
    PostViewModelReq:
      properties:
        post_id:
          type: integer
        post_date:
          type: string
        poster_name:
          type: string
        post:
          type: string
      required:
        - post_id
        - post_date
        - poster_name
        - post
    PostViewModelRes:
      properties:
        post_id:
          type: integer
        post_date:
          type: string
        poster_name:
          type: string
        post:
          type: string
        commentList:
          type: string
      required:
        - postId
        - postDate
        - posterName
        - post
        - commentList
    CommentViewModelRes:
      properties:
        comment_id:
          type: integer
        create_date:
          type: string
        commenter_name:
          type: string
        comment:
          type: string
      required:
        - comment_id
        - create_date
        - commenter_name
        - comment
    CommentViewModelReq:
      properties:
        comment_id:
          type: integer
        commenter_name:
          type: string
        comment:
          type: string
      required:
        - comment_id
        - commenter_name
        - comment